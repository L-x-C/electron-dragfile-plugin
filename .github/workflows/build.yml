name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: electron-dragfile-plugin.win32-x64-msvc.node
            platform: win32
          - os: macos-13
            target: x86_64-apple-darwin
            artifact: electron-dragfile-plugin.darwin-x64.node
            platform: darwin
          - os: macos-14
            target: aarch64-apple-darwin
            artifact: electron-dragfile-plugin.darwin-arm64.node
            platform: darwin

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    
    - name: Install dependencies
      run: npm install

    - name: Build native module
      run: npm run build:simple

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}
        retention-days: 30

    - name: Build logs
      if: failure()
      run: |
        echo "Build failed for ${{ matrix.os }} (${{ matrix.target }})"
        ls -la target/ || echo "No target directory"
        ls -la *.node || echo "No .node files"

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: List artifacts
      run: ls -la artifacts/

    - name: Install dependencies
      run: npm install

    - name: Update version in package.json and Cargo.toml
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Setting version to $VERSION"
        # Update package.json
        npm version $VERSION --no-git-tag-version
        # Update Cargo.toml to match
        sed -i.bak "s/^version = .*/version = \"$VERSION\"/" Cargo.toml

    - name: Copy platform binaries to current directory
      run: |
        cp artifacts/*.node ./
        ls -la *.node

    - name: Prepublish
      run: npm run prepublishOnly

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false